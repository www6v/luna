<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>com.yhd.arch.tuna</groupId>
    <artifactId>tuna</artifactId>
    <version>0.1-SNAPSHOT</version>
  </parent>

  <groupId>com.yhd.arch.tuna</groupId>
  <artifactId>tuna-job</artifactId>
  <version>0.1-SNAPSHOT</version>
  <name>${project.artifactId}</name>
  <packaging>jar</packaging>

  <description>My wonderfull scala app</description>
  <inceptionYear>2010</inceptionYear>

  <licenses>
    <license>
      <name>My License</name>
      <url>http://....</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  <properties>
    <maven.compiler.source>1.7</maven.compiler.source>
    <maven.compiler.target>1.7</maven.compiler.target>
    <maven.assembly.plugin.version>2.3</maven.assembly.plugin.version>
    <encoding>UTF-8</encoding>
    <scala.version>2.11.8</scala.version>
    <scala-binary.version>2.11</scala-binary.version>
    <spark.version>2.0.1</spark.version>
    <tuna-common.version>0.1-SNAPSHOT</tuna-common.version>
    <jedis.version>2.8.1</jedis.version>
    <detector-monitor-client.version>1.0.3-SNAPSHOT</detector-monitor-client.version>
    <detector-monitor-stream.version>0.1.1-SNAPSHOT</detector-monitor-stream.version>
    <mongodbclient.version>0.0.5-SNAPSHOT-beta</mongodbclient.version>
    <!--<hadoop.version>2.6.0-cdh5.4.3</hadoop.version>-->
    <specs_2.10.version>1.6.9</specs_2.10.version>
    <scalatest.version>2.0</scalatest.version>
    <spring.version>3.2.0.RELEASE</spring.version>
    <mongo-spark.version>2.0.0</mongo-spark.version>
    <amqp-client.version>3.4.3</amqp-client.version>
    <kryo.version>3.0.3</kryo.version>
    <aspectjweaver.version>1.5.4</aspectjweaver.version>
    <maven-scala-plugin.version>2.15.2</maven-scala-plugin.version>
    <maven-surefire-plugin.version>2.6</maven-surefire-plugin.version>
    <maven-shade-plugin.version>2.3</maven-shade-plugin.version>
    <maven-surefire-plugin.version>2.6</maven-surefire-plugin.version>
    <maven-scala-plugin.version>2.15.0</maven-scala-plugin.version>
    <maven-compiler-plugin.version>2.5.1</maven-compiler-plugin.version>
    <maven-resources-plugin.version>2.6</maven-resources-plugin.version>
    <maven-antrun-plugin.version>1.7</maven-antrun-plugin.version>
    <svn-revision-number-maven-plugin.vesion>1.13</svn-revision-number-maven-plugin.vesion>
  </properties>

  <repositories>
    <repository>
      <id>scala-tools.org</id>
      <name>Scala-Tools Maven2 Repository</name>
      <url>http://scala-tools.org/repo-releases</url>
    </repository>
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <id>scala-tools.org</id>
      <name>Scala-Tools Maven2 Repository</name>
      <url>http://scala-tools.org/repo-releases</url>
    </pluginRepository>
  </pluginRepositories>

  <dependencies>
    <dependency>
      <groupId>org.scala-lang</groupId>
      <artifactId>scala-library</artifactId>
      <version>${scala.version}</version>
    </dependency>

    <!-- Test -->
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.scala-tools.testing</groupId>
      <artifactId>specs_2.10</artifactId>
      <version>${specs_2.10.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.scalatest</groupId>
      <artifactId>scalatest_2.10</artifactId>
      <version>${scalatest.version}</version>
    </dependency>

    <dependency>
      <groupId>com.esotericsoftware</groupId>
      <artifactId>kryo</artifactId>
      <version>${kryo.version}</version>
    </dependency>
    <dependency>
      <groupId>com.yhd.arch.tuna</groupId>
      <artifactId>tuna-common</artifactId>
      <version>${tuna-common.version}</version>
    </dependency>
    <!--
    <dependency>
        <groupId>org.apache.hadoop</groupId>
        <artifactId>hadoop-client</artifactId>
        <scope>${hadoop.deps.scope}</scope>
        <version>${hadoop.version}</version>
        <exclusions>
            <exclusion>
                <groupId>asm</groupId>
                <artifactId>asm</artifactId>
            </exclusion>
            <exclusion>
                <groupId>org.codehaus.jackson</groupId>
                <artifactId>jackson-mapper-asl</artifactId>
            </exclusion>
            <exclusion>
                <groupId>org.ow2.asm</groupId>
                <artifactId>asm</artifactId>
            </exclusion>
            <exclusion>
                <groupId>org.jboss.netty</groupId>
                <artifactId>netty</artifactId>
            </exclusion>
            <exclusion>
                <groupId>commons-logging</groupId>
                <artifactId>commons-logging</artifactId>
            </exclusion>
            <exclusion>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-all</artifactId>
            </exclusion>
            <exclusion>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>servlet-api-2.5</artifactId>
            </exclusion>
            <exclusion>
                <groupId>javax.servlet</groupId>
                <artifactId>servlet-api</artifactId>
            </exclusion>
            <exclusion>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
            </exclusion>
        </exclusions>
    </dependency>
    -->
    <dependency>
      <groupId>org.mongodb.spark</groupId>
      <artifactId>mongo-spark-connector_${scala-binary.version}</artifactId>
      <version>${mongo-spark.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-sql_${scala-binary.version}</artifactId>
      <version>${spark.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-core_${scala-binary.version}</artifactId>
      <version>${spark.version}</version>
      <exclusions>
        <exclusion>
          <groupId>org.javassist</groupId>
          <artifactId>javassist</artifactId>
        </exclusion>
        <exclusion>
          <groupId>io.netty</groupId>
          <artifactId>netty</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>jcl-over-slf4j</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-streaming_${scala-binary.version}</artifactId>
      <version>${spark.version}</version>
      <exclusions>
        <exclusion>
          <artifactId>asm</artifactId>
          <groupId>asm</groupId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>fastjson</artifactId>
    </dependency>

    <dependency>
      <groupId>com.yihaodian.architecture</groupId>
      <artifactId>hedwig-common</artifactId>
    </dependency>
    <dependency>
      <groupId>com.yihaodian.architecture</groupId>
      <artifactId>hedwig-zk</artifactId>
    </dependency>
    <dependency>
      <groupId>com.yihaodian.architecture</groupId>
      <artifactId>detector-monitor-client</artifactId>
      <version>${detector-monitor-client.version}</version>
    </dependency>
    <dependency>
      <groupId>com.yihaodian.architecture</groupId>
      <artifactId>detector-monitor-stream</artifactId>
      <version>${detector-monitor-stream.version}</version>
      <type>jar</type>
      <exclusions>
        <exclusion>
          <artifactId>jumper-producerclient</artifactId>
          <groupId>com.yihaodian.architecture</groupId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.yihaodian.architecture</groupId>
      <artifactId>jumper-consumerclient</artifactId>
      <exclusions>
        <exclusion>
          <artifactId>cglib</artifactId>
          <groupId>cglib</groupId>
        </exclusion>
    </exclusions>
    </dependency>

    <dependency>
      <groupId>com.yihaodian.architecture</groupId>
      <artifactId>ycache-client</artifactId>
    </dependency>

    <dependency>
      <groupId>redis.clients</groupId>
      <artifactId>jedis</artifactId>
      <version>${jedis.version}</version>
    </dependency>

    <dependency>
      <groupId>com.yihaodian.configcentre</groupId>
      <artifactId>ycc-client</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-beans</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
    </dependency>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
    </dependency>

    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>${spring.version}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-aspects</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <dependency>
      <groupId>aspectj</groupId>
      <artifactId>aspectjweaver</artifactId>
      <version>${aspectjweaver.version}</version>
    </dependency>
   <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-core</artifactId>
      <version>${spring.version}</version>
    </dependency>

    <dependency>
      <groupId>com.yihaodian.architecture</groupId>
      <artifactId>jumper-receiver</artifactId>
    </dependency>
    <dependency>
      <groupId>com.yihaodian.ymongo</groupId>
      <artifactId>mongodbclient</artifactId>
      <version>${mongodbclient.version}</version>
    </dependency>
    <!--
    <dependency>
      <groupId>com.yihaodian.ymongo</groupId>
      <artifactId>ymongoclient</artifactId>
      <version>${ymongoclient.version}</version>
    </dependency>
    -->
    <dependency>
      <groupId>com.rabbitmq</groupId>
      <artifactId>amqp-client</artifactId>
      <version>${amqp-client.version}</version>
    </dependency>
  </dependencies>
<!--
  <profiles>
    <profile>
      <id>base</id>
      <properties>
        <package.environment>base</package.environment>
      </properties>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
    </profile>
    <profile>
      <id>staging</id>
      <properties>
        <package.environment>staging</package.environment>
      </properties>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
    </profile>
  </profiles>
  -->
  <build>
    <sourceDirectory>src/main/java</sourceDirectory>
    <testSourceDirectory>src/test/scala</testSourceDirectory>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <source>${maven.compiler.source}</source>
          <target>${maven.compiler.target}</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>${maven-resources-plugin.version}</version>
        <configuration>
          <encoding>UTF-8</encoding>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.scala-tools</groupId>
        <artifactId>maven-scala-plugin</artifactId>
        <version>${maven-scala-plugin.version}</version>
        <executions>
          <execution>
            <goals>
              <goal>compile</goal>
              <goal>testCompile</goal>
            </goals>

            <configuration>
              <args>
                <arg>-dependencyfile</arg>
                <arg>${project.build.directory}/.scala_dependencies</arg>
              </args>
            </configuration>

          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
        <configuration>
          <skip>true</skip>
          <skipTests>true</skipTests>
          <testFailureIgnore>false</testFailureIgnore>
          <useFile>false</useFile>
          <disableXmlReport>true</disableXmlReport>

          <includes>
            <include>**/*Test.*</include>
            <include>**/*Suite.*</include>
          </includes>
        </configuration>
      </plugin>
      <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-shade-plugin</artifactId>
      <version>${maven-shade-plugin.version}</version>
      <configuration>
        <createDependencyReducedPom>false</createDependencyReducedPom>
        <filters>
          <filter>
            <artifact>*:*</artifact>
            <excludes>
              <exclude>META-INF/*.SF</exclude>
              <exclude>META-INF/*.DSA</exclude>
              <exclude>META-INF/*.RSA</exclude>
            </excludes>
          </filter>
        </filters>
        <transformers>
          <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
          <transformer
                  implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
            <manifestEntries>
              <Main-Class>com.yhd.arch.tuna.driver.MergeStream</Main-Class>
              <Implementation-Version>${project.version}</Implementation-Version>
            </manifestEntries>
          </transformer>
          <transformer
                  implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
            <resource>META-INF/spring.handlers</resource>
          </transformer>
          <transformer
                  implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
            <resource>META-INF/spring.schemas</resource>
          </transformer>
          <transformer
                  implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
            <resource>reference.conf</resource>
          </transformer>
        </transformers>
        <outputFile>tuna-${project.version}.jar</outputFile>
        <outputDirectory>/lib/</outputDirectory>

      </configuration>
      <executions>
        <execution>
          <phase>package</phase>
          <goals>
            <goal>shade</goal>
          </goals>
        </execution>
      </executions>
    </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-assembly-plugin</artifactId>
        <version>${maven.assembly.plugin.version}</version>
        <inherited>false</inherited>
        <configuration>
          <appendAssemblyId>false</appendAssemblyId>
          <finalName>${project.artifactId}-${project.version}-${SVN.committedRevision}-${maven.build.timestamp}</finalName>
        </configuration>
        <executions>
          <execution>
            <configuration>
              <descriptors>
                <descriptor>src/main/resources/assembly/assembly.xml</descriptor>
              </descriptors>
            </configuration>
            <phase>package</phase>
            <goals>
              <goal>single</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.google.code.maven-svn-revision-number-plugin</groupId>
        <artifactId>svn-revision-number-maven-plugin</artifactId>
        <version>${svn-revision-number-maven-plugin.vesion}</version>
        <executions>
          <execution>
            <goals>
              <goal>revision</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <entries>
            <entry>
              <prefix>SVN</prefix>
            </entry>
          </entries>
        </configuration>
      </plugin>
      <!-- 生成MD5文件 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>${maven-antrun-plugin.version}</version>
        <executions>
          <execution>
            <phase>package</phase>
            <configuration>
              <!-- 必须设定failOnError=false，否则build会报“至少需要一个文件”错误 -->
              <failOnError>false</failOnError>
              <target>
                <checksum>
                  <fileset dir="target">
                    <include name="*" />
                  </fileset>
                </checksum>
              </target>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
    <!--
    <resources>
      <resource>
        <directory>src/main/resources/${package.environment}</directory>
      </resource>
    </resources>
    -->
  </build>
</project>
